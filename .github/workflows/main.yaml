name: Docker Image CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Publish Docker Image Locally
    runs-on: ubuntu-latest

    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Read version
        id: get_version
        run: |
          VERSION=$(cat src/version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.DOCKER_USERNAME }}/fastapi:${{ steps.get_version.outputs.VERSION }} .

      - name: Publish Docker Image
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/fastapi:${{ steps.get_version.outputs.VERSION }}

  test:
    name: Test Docker Image Health v${{ needs.build.outputs.VERSION }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: |
          docker pull ${{ env.DOCKER_USERNAME }}/fastapi:${{ needs.build.outputs.VERSION }}

      - name: Run Docker Container
        run: |
          docker run -d -p 8080:80 --name fastapi ${{ env.DOCKER_USERNAME }}/fastapi:${{ needs.build.outputs.VERSION }}
          sleep 10

      - name: Test Health Endpoint
        run: |
          curl -f http://localhost:8080/health

      - name: Stop Docker Container
        run: |
          docker stop fastapi
          docker rm fastapi

  security_scan:
    name: Trivy Security Scan v${{ needs.build.outputs.VERSION }}
    runs-on: ubuntu-latest
    needs: test
    if: ${{ success() }}

    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_USERNAME }}/fastapi:${{ needs.build.outputs.VERSION }}

  push:
    name: Push Docker Image to DockerHub v${{ needs.build.outputs.VERSION }}
    runs-on: ubuntu-latest
    needs: [build, test, security_scan]
    if: ${{ success() }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Docker Image
        run: |
          docker tag ${{ env.DOCKER_USERNAME }}/fastapi:${{ needs.build.outputs.VERSION }} ${{ env.DOCKER_USERNAME }}/fastapi:${{ needs.build.outputs.VERSION }}
          docker push ${{ env.DOCKER_USERNAME }}/fastapi:${{ needs.build.outputs.VERSION }}
