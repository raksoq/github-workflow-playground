name: Docker Image CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Read version
        id: get_version
        run: |
          VERSION=$(cat src/version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build Docker Image
        run: |
          docker build -t myapp:${{ needs.build.outputs.VERSION }} .

  test:
    name: Test Docker Image Health v${{ needs.build.outputs.VERSION }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Docker Container
        run: |
          docker run -d -p 8080:80 --name myapp myapp:${{ needs.build.outputs.VERSION }}
          sleep 10

      - name: Test Health Endpoint
        run: |
          curl -f http://localhost:8080/health

      - name: Stop Docker Container
        run: |
          docker stop myapp
          docker rm myapp

  security_scan:
    name: Trivy Security Scan v${{ needs.build.outputs.VERSION }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy Scan
        run: |
          trivy image myapp:${{ needs.build.outputs.VERSION }}

  push:
    name: Push Docker Image to DockerHub v${{ needs.build.outputs.VERSION }}
    runs-on: ubuntu-latest
    needs: [build, test, security_scan]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker tag myapp:${{ needs.build.outputs.VERSION }} ${{ secrets.DOCKER_USERNAME }}/myapp:${{ needs.build.outputs.VERSION }}
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:${{ needs.build.outputs.VERSION }}
